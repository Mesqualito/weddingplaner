docker:
  mysql:
      docker run --detach --name mysql --mount source=mysql-weddingplaner-db,target=/var/lib/mysql --publish=3306:3306 --env MYSQL_ROOT_PASSWORD=[MYSQL_ROOT_PASSWORD] --env MYSQL_DATABASE=weddingplaner_db --env MYSQL_USER=weddingplaner --env MYSQL_PASSWORD=[MYSQL_USER_PASSWORD] mysql(:tag)
  elasticsearch:
       docker run --publish=9200:9200 --publish 9300:9300 --mount source=elasticsearch-weddingplaner-data,target=/usr/share/elasticsearch/data/ elasticsearch:2.4.6
  postgresql:
       docker run --detach --name postgresql --mount source=postgresql-weddingplaner-db,target=/var/lib/postgresql/data --publish=5432:5432 --env POSTGRES_PASSWORD=[POSTGRES_SUPERUSER_PASSWORD] --env POSTGRES_USER=[POSTGRES_SUPERUSER] --env POSTGRES_DB=[POSTGRES_DBNAME] postgres(:tag)
  jenkins2:
    - docker container run -d --name jenkins2 -p 18080:8080 -p 50000:50000 -v $PWD/jenkins:/var/jenkins_home:z -t jenkinsci/jenkins
  phpmyadmin:
    - docker run --name phpmyadmin -d -e PMA_HOST=jfrpocyduwfg38kq.chr7pe7iynqr.eu-west-1.rds.amazonaws.com -p 8099:80 phpmyadmin/phpmyadmin

Copy postgres volume from dev to prod:
    - docker run --rm -v <SOURCE_DATA_VOLUME_NAME>:/from alpine ash -c "cd /from ; tar -cf - . " | ssh <TARGET_HOST> 'docker run --rm -i -v <TARGET_DATA_VOLUME_NAME>:/to alpine ash -c "cd /to ; tar -xpvf - " '

TODO: Switch hibernate_sequence for User/UserExtra-Registration in Postgresql
    - ALTER SEQUENCE hibernate_sequence RESTART WITH 500000; (not working)
    (liquibase changeset "mesqualito_0008_UsersSequenceUpdate.xml" (not working)
    see: https://stackoverflow.com/questions/8745051/postgres-manually-alter-sequence, http://www.neilconway.org/docs/sequences/,
    http://www.liquibase.org/documentation/changes/alter_sequence.html u.a.)


heroku:
needed once:
- brew install heroku/brew/heroku (installs heroku toolbelt)
- heroku login
- jhipster heroku
- heroku plugins:install heroku-cli-deploy

can be deployed manually:
- ./gradlew -Pprod bootRepackage -x test heroku war:deploy build/libs/*war --app weddingplaner
- deploy with git and jenkins2
- deploy by heroku server watching master-branch of git
